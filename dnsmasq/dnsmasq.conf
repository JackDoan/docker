# Only listen to routers' LAN NIC.  Doing so opens up tcp/udp port 53 to
# localhost and udp port 67 to world:
#interface=<LAN-NIC>

#don't serve DNS
port=0

# dnsmasq will open tcp/udp port 53 and udp port 67 to world to help with
# dynamic interfaces (assigning dynamic ips). Dnsmasq will discard world
# requests to them, but the paranoid might like to close them and let the
# kernel handle them:
bind-interfaces

# Optionally set a domain name
domain=lan.jackdoan.com

# Set default gateway
dhcp-option=3,10.0.0.254

# Set DNS servers to announce
dhcp-option=6,8.8.8.8

# Dynamic range of IPs to make available to LAN PC and the lease time.
# Ideally set the lease time to 5m only at first to test everything works okay before you set long-lasting records.
#dhcp-range=10.0.1.0,10.0.1.100,5m
dhcp-range=10.0.0.254,proxy,255.0.0.0

#This tells DNSMASQ to send disable multicast and broadcast discovery, and to download the boot file immediately.
dhcp-option=vendor:PXEClient,6,2b

#DNSMASQ will ignore this option unless the dhcp-range option is set to proxy. When it is, this option sends the filename for the client to download. Note that the “.0” is missing from the end. Somewhere or another, it gets added back, and if it’s here, the filename will end with “.0.0“, which is not what we want.
pxe-service=X86PC, "Boot from network", bios/lpxelinux

# If you’d like to have dnsmasq assign static IPs to some clients, bind the LAN computers
# NIC MAC addresses:
#dhcp-host=aa:bb:cc:dd:ee:ff,192.168.111.50
#dhcp-host=aa:bb:cc:ff:dd:ee,192.168.111.51

enable-tftp
tftp-root=/srv/tftp

#In secure mode only files owned by the dnsmasq user will be served over TFTP.
#tftp-secure #what a pain

dhcp-match=set:efi-x86_64,option:client-arch,7
dhcp-match=set:efi-x86_64,option:client-arch,9
dhcp-match=set:efi-x86,option:client-arch,6
dhcp-match=set:bios,option:client-arch,0
dhcp-boot=tag:efi-x86_64,"efi64/syslinux.efi"
dhcp-boot=tag:efi-x86,"efi32/syslinux.efi"
dhcp-boot=tag:bios,"bios/lpxelinux.0"
